name: Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 15
    - name: Build with Maven
      run: mvn -B package --file oag/pom.xml 
    - name: Create Artifact Folder
      run: mkdir oag/target/artifact/ && cp oag/target/oag*.jar oag/target/artifact/oag.jar && cp oag/sample-config.yaml oag/target/artifact/sample-config.yaml
    - name: Add commit hash to artifact
      run: echo $GITHUB_SHA >> oag/target/artifact/commit-hash.txt
    - name: Publish Artifact
      uses: actions/upload-artifact@v2
      with:
          path: oag/target/artifact/

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - uses: papeloto/action-zip@v1
      with:
        files: oag/target/artifact/
        recursive: false
        dest: oag-${{ steps.get_version.outputs.VERSION }}.zip

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./oag-${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: oag-${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/gzip
        
    # Docker build
    - name: Docker Build
      run: docker build -t gianlucafrei/oag:${{ steps.get_version.outputs.VERSION }} -t gianlucafrei/oag:latest .
    - name: Docker Login
      run: docker login --username gianlucafrei --password ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Push
      run: docker push gianlucafrei/oag:${{ steps.get_version.outputs.VERSION }}
